          ---  ---  ---  ---  ---  ---  ---  ---  ---  ---  ---  ---  ---  ---  ---
           1    2    3    4    5    6    7    8    9   10   11   12   13   14   15
                                    ^
                                    |
                                    |
                                    |
                                Current page


1. В общем случае вводим расстояние от текущей страницы (её номера) до "граничной" (первой или последней) страницы. Вернее вводим два расстояния (выражаемых в количестве страниц, вернее их номеров): от первой до текущей - обозначим его firstCurrentDistance, и от текущей до последней - обозначим его currentLastDistance. Очевидно, что 1 + firstCurrentDistance + 1 + currentLastDistance + 1 = totalPagesNum, где totalPagesNum - общее количество страниц (и их номеров). Обозначим, так же, номер 1-й страницы через firstPageNum (равен 1) номер текущей страницы - через currentPageNum, номер последней страницы - через lastPageNum.
2. В общем случае для страниц (их номеров), рассположенных между текущей и граничной справедлива следующая ситуация: отображается какое то количество номеров страниц примыкающих к граничной, далее отображается многоточие, далее отображается какое то количество страниц примыкающих к текущей. Обозначим через adjoinedToMarginPagesNum количество отображаемых страниц прилегающих к граничной, adjonedToCurrentPagesNum - количество страниц прилегающих (с одной стороны, правой или левой) к текущей, minNonShowingPagesNum - минимальное колчиство оставшихся (после вычитания из firstCurrentDistance или currentLastDistance суммы adjonedToCurrentPagesNum и adjoinedToMarginPagesNum) промежуточных страниц начиная с которого эти самые промежуточные страницы не отображаются.
3. Соответственно, из общего pagesNumArray, выделяем два array: 1-й (обозначим его через leftNumsArray) содержащий следующий номера страниц [1, 2, 3, ..., currentPageNum - 1], то есть номера страниц от firstPageNum (который равен единице) вкючительно, и до currentPageNum, и 2-й (обозначим его через rightNumsArray) содержащий номера страниц от currentPageNum и до lastPageNum включительно, то есть [currentPageNum + 1, currentPageNum + 2, ..., lastPageNum].
4. Если firstCurrentDistance >= adjoinedToMarginPagesNum + minNonShowingPagesNum + adjonedToCurrentPagesNum, то выделяем (при помощи JS array slice) array leftMarginPages = [1, ..., adjoinedToMarginPagesNum - 1, adjoinedToMarginPagesNum] и array leftCurrentMarginPages = [currentPageNum - adjonedToCurrentPagesNum, currentPageNum - adjonedToCurrentPagesNum + 1, ..., currentPageNum - 1]. Аналогично если currentLastDistance > = adjoinedToMarginPagesNum + minNonShowingPagesNum + adjonedToCurrentPagesNum, то выделяем array rightCurrentMarginPages = [currentPageNum + 1, currentPageNum + adjonedToCurrentPagesNum - 1, currentPageNum + adjonedToCurrentPagesNum] и array rightMarginPages = [lastPageNum - adjoinedToMarginPagesNum, lastPageNum - adjoinedToMarginPagesNum + 1, ..., lastPageNum]. Вводим так же логические переменные showLeftDots которая устанавливается в true если firstCurrentDistance >= adjoinedToMarginPagesNum + minNonShowingPagesNum + adjonedToCurrentPagesNum. Аналогично вводим логическую переменную showRightDots, которая устанавливается в true если currentLastDistance > = adjoinedToMarginPagesNum + minNonShowingPagesNum + adjonedToCurrentPagesNum.
5. В template проверяем посредством ngIf установлена ли showLeftDots в true. Если установлен, то при помощи ng-repeat демонстрируем номера страниц из leftMarginPages, затем демонстрируем многоточие, и затем, при помощи ng-repeat демонстрируем номера страниц из leftCurrentMarginPages. Если же showLeftDots имеет значение false, то просто, при помощи ng-repeat демонстрируем номера из leftNumsArray. Далее демонстрируем currentPageNum. Далее, если showRightDots === true, то демонстрируем номера страниц из rightCurrentMarginPages, далее многоточие и далее - номера из rightMarginPages. Если же showRightDots === false, то просто, после текущей страницы демонстрируем номера из rightNumsArray.

